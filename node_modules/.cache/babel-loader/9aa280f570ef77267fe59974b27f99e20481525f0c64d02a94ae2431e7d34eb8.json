{"ast":null,"code":"var _jsxFileName = \"/Users/janreigtorra/Desktop/response-type-app/frontend /src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Using our previously created CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [context, setContext] = useState('');\n  const [responseType, setResponseType] = useState(null);\n  const [distribution, setDistribution] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [suggestedResponse, setSuggestedResponse] = useState('');\n  const [generating, setGenerating] = useState(false);\n  const [selectedType, setSelectedType] = useState('');\n  const [error, setError] = useState('');\n  const [datasetInfo, setDatasetInfo] = useState(null);\n  const [showInfo, setShowInfo] = useState(false);\n\n  // Fetch dataset info on component mount\n  useEffect(() => {\n    const fetchDatasetInfo = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/health');\n        setDatasetInfo(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch dataset info\", error);\n      }\n    };\n    fetchDatasetInfo();\n  }, []);\n  const handleSubmit = async () => {\n    setLoading(true);\n    setSuggestedResponse('');\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:8000/predict', {\n        context\n      });\n      setResponseType(response.data.response_type);\n      setDistribution(response.data.distribution);\n      setError('');\n    } catch (error) {\n      console.error(\"Prediction failed\", error);\n      setError(\"Failed to analyze the context. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerate = async type => {\n    setGenerating(true);\n    setSelectedType(type);\n    setError('');\n    try {\n      const res = await axios.post('http://localhost:8000/generate', {\n        context,\n        response_type: type\n      });\n      setSuggestedResponse(res.data.generated_response);\n    } catch (err) {\n      console.error(\"Generation failed\", err);\n      setError(\"Failed to generate response. Please try again.\");\n    } finally {\n      setGenerating(false);\n    }\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text);\n    alert(\"Response copied to clipboard!\");\n  };\n\n  // Sort response types by probability\n  const sortedResponseTypes = Object.entries(distribution).sort((a, b) => b[1] - a[1]);\n  const getColorForPercentage = percentage => {\n    // Convert percentage to a value between 0 and 1\n    const value = percentage / 100;\n\n    // Color gradient from blue (low) to green (high)\n    if (value > 0.7) return '#34D399'; // Green for high values\n    if (value > 0.4) return '#60A5FA'; // Blue for medium values\n    return '#9CA3AF'; // Gray for low values\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83E\\uDDE0 Counselor Support Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"AI-powered guidance for mental health professionals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), datasetInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataset-badge\",\n          onClick: () => setShowInfo(!showInfo),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Training dataset: \", datasetInfo.dataset_size, \" examples\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-icon\",\n            children: \"\\u2139\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), showInfo && datasetInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"About the Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"This system uses semantic search to find similar patient contexts from a dataset of \", datasetInfo.dataset_size, \" examples. When generating responses, the assistant identifies the most semantically similar examples from your dataset to provide context-appropriate suggestions.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"How it works:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 16\n          }, this), \" The system creates vector embeddings of patient contexts and uses cosine similarity to find the most relevant examples. This helps ensure that generated responses are informed by similar past interactions.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-button info-close\",\n          onClick: () => setShowInfo(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"context\",\n            children: \"Patient Context\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"context\",\n            rows: \"6\",\n            value: context,\n            onChange: e => setContext(e.target.value),\n            placeholder: \"Enter the patient's context or conversation excerpt here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            disabled: loading || !context,\n            className: `primary-button ${loading || !context ? 'disabled' : ''}`,\n            children: loading ? \"Analyzing...\" : \"Analyze Response Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), Object.keys(distribution).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Response Type Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Based on the patient context, here are the recommended response approaches:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"response-types-grid\",\n            children: sortedResponseTypes.map(([label, prob]) => {\n              const percentage = (prob * 100).toFixed(1);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"response-type-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"response-type-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: label.charAt(0).toUpperCase() + label.slice(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"percentage\",\n                    style: {\n                      color: getColorForPercentage(parseFloat(percentage))\n                    },\n                    children: [percentage, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    style: {\n                      width: `${percentage}%`,\n                      backgroundColor: getColorForPercentage(parseFloat(percentage))\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"secondary-button\",\n                  onClick: () => handleGenerate(label),\n                  disabled: generating,\n                  children: generating && selectedType === label ? \"Finding similar examples...\" : `Generate ${label} response`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this)]\n              }, label, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), suggestedResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggested-response-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Suggested \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"highlighted-text\",\n              children: selectedType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 27\n            }, this), \" Response\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"semantic-badge\",\n            children: \"Generated using semantically similar examples\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"response-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: suggestedResponse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"response-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-button\",\n              onClick: () => copyToClipboard(suggestedResponse),\n              children: \"Copy to clipboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-button\",\n              onClick: () => setSuggestedResponse(''),\n              children: \"Dismiss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Counselor Support Assistant \\u2022 AI-powered guidance for mental health professionals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VVYkOWErwOB/parbOtmjhq17JvY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","context","setContext","responseType","setResponseType","distribution","setDistribution","loading","setLoading","suggestedResponse","setSuggestedResponse","generating","setGenerating","selectedType","setSelectedType","error","setError","datasetInfo","setDatasetInfo","showInfo","setShowInfo","fetchDatasetInfo","response","get","data","console","handleSubmit","post","response_type","handleGenerate","type","res","generated_response","err","copyToClipboard","text","navigator","clipboard","writeText","alert","sortedResponseTypes","Object","entries","sort","a","b","getColorForPercentage","percentage","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","dataset_size","htmlFor","id","rows","onChange","e","target","placeholder","disabled","keys","length","map","label","prob","toFixed","charAt","toUpperCase","slice","style","color","parseFloat","width","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/janreigtorra/Desktop/response-type-app/frontend /src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Using our previously created CSS\n\nfunction App() {\n  const [context, setContext] = useState('');\n  const [responseType, setResponseType] = useState(null);\n  const [distribution, setDistribution] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [suggestedResponse, setSuggestedResponse] = useState('');\n  const [generating, setGenerating] = useState(false);\n  const [selectedType, setSelectedType] = useState('');\n  const [error, setError] = useState('');\n  const [datasetInfo, setDatasetInfo] = useState(null);\n  const [showInfo, setShowInfo] = useState(false);\n\n  // Fetch dataset info on component mount\n  useEffect(() => {\n    const fetchDatasetInfo = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/health');\n        setDatasetInfo(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch dataset info\", error);\n      }\n    };\n    \n    fetchDatasetInfo();\n  }, []);\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    setSuggestedResponse('');\n    setError('');\n    \n    try {\n      const response = await axios.post('http://localhost:8000/predict', { context });\n      setResponseType(response.data.response_type);\n      setDistribution(response.data.distribution);\n      setError('');\n    } catch (error) {\n      console.error(\"Prediction failed\", error);\n      setError(\"Failed to analyze the context. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGenerate = async (type) => {\n    setGenerating(true);\n    setSelectedType(type);\n    setError('');\n    \n    try {\n      const res = await axios.post('http://localhost:8000/generate', {\n        context,\n        response_type: type\n      });\n      setSuggestedResponse(res.data.generated_response);\n    } catch (err) {\n      console.error(\"Generation failed\", err);\n      setError(\"Failed to generate response. Please try again.\");\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n    alert(\"Response copied to clipboard!\");\n  };\n\n  // Sort response types by probability\n  const sortedResponseTypes = Object.entries(distribution)\n    .sort((a, b) => b[1] - a[1]);\n\n  const getColorForPercentage = (percentage) => {\n    // Convert percentage to a value between 0 and 1\n    const value = percentage / 100;\n    \n    // Color gradient from blue (low) to green (high)\n    if (value > 0.7) return '#34D399'; // Green for high values\n    if (value > 0.4) return '#60A5FA'; // Blue for medium values\n    return '#9CA3AF'; // Gray for low values\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-card\">\n        {/* Header */}\n        <div className=\"app-header\">\n          <h1>🧠 Counselor Support Assistant</h1>\n          <p>AI-powered guidance for mental health professionals</p>\n          {datasetInfo && (\n            <div className=\"dataset-badge\" onClick={() => setShowInfo(!showInfo)}>\n              <span>Training dataset: {datasetInfo.dataset_size} examples</span>\n              <span className=\"info-icon\">ℹ️</span>\n            </div>\n          )}\n        </div>\n        \n        {showInfo && datasetInfo && (\n          <div className=\"info-box\">\n            <h3>About the Assistant</h3>\n            <p>This system uses semantic search to find similar patient contexts from a dataset of {datasetInfo.dataset_size} examples. \n            When generating responses, the assistant identifies the most semantically similar examples from your dataset \n            to provide context-appropriate suggestions.</p>\n            <p><strong>How it works:</strong> The system creates vector embeddings of patient contexts and uses cosine similarity to find the most relevant examples. This helps ensure that generated responses are informed by similar past interactions.</p>\n            <button className=\"text-button info-close\" onClick={() => setShowInfo(false)}>Close</button>\n          </div>\n        )}\n        \n        {/* Main content */}\n        <div className=\"app-content\">\n          <div className=\"input-group\">\n            <label htmlFor=\"context\">Patient Context</label>\n            <textarea\n              id=\"context\"\n              rows=\"6\"\n              value={context}\n              onChange={(e) => setContext(e.target.value)}\n              placeholder=\"Enter the patient's context or conversation excerpt here...\"\n            />\n          </div>\n          \n          <div className=\"button-container\">\n            <button\n              onClick={handleSubmit}\n              disabled={loading || !context}\n              className={`primary-button ${loading || !context ? 'disabled' : ''}`}\n            >\n              {loading ? \"Analyzing...\" : \"Analyze Response Options\"}\n            </button>\n          </div>\n          \n          {error && (\n            <div className=\"error-message\">\n              <p>{error}</p>\n            </div>\n          )}\n          \n          {/* Results Section */}\n          {Object.keys(distribution).length > 0 && (\n            <div className=\"results-section\">\n              <div className=\"section-header\">\n                <h2>Response Type Analysis</h2>\n                <p>Based on the patient context, here are the recommended response approaches:</p>\n              </div>\n              \n              <div className=\"response-types-grid\">\n                {sortedResponseTypes.map(([label, prob]) => {\n                  const percentage = (prob * 100).toFixed(1);\n                  return (\n                    <div key={label} className=\"response-type-card\">\n                      <div className=\"response-type-header\">\n                        <h3>{label.charAt(0).toUpperCase() + label.slice(1)}</h3>\n                        <span className=\"percentage\" style={{ color: getColorForPercentage(parseFloat(percentage)) }}>\n                          {percentage}%\n                        </span>\n                      </div>\n                      \n                      <div className=\"progress-bar-container\">\n                        <div \n                          className=\"progress-bar\" \n                          style={{ \n                            width: `${percentage}%`,\n                            backgroundColor: getColorForPercentage(parseFloat(percentage))\n                          }}\n                        ></div>\n                      </div>\n                      \n                      <button\n                        className=\"secondary-button\"\n                        onClick={() => handleGenerate(label)}\n                        disabled={generating}\n                      >\n                        {generating && selectedType === label ? \n                          \"Finding similar examples...\" : \n                          `Generate ${label} response`}\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n          \n          {/* Generated Response Section */}\n          {suggestedResponse && (\n            <div className=\"suggested-response-section\">\n              <h2>\n                Suggested <span className=\"highlighted-text\">{selectedType}</span> Response\n              </h2>\n              <div className=\"semantic-badge\">\n                Generated using semantically similar examples\n              </div>\n              <div className=\"response-content\">\n                <p>{suggestedResponse}</p>\n              </div>\n              <div className=\"response-actions\">\n                <button \n                  className=\"text-button\"\n                  onClick={() => copyToClipboard(suggestedResponse)}\n                >\n                  Copy to clipboard\n                </button>\n                <button \n                  className=\"text-button\"\n                  onClick={() => setSuggestedResponse('')}\n                >\n                  Dismiss\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <footer className=\"app-footer\">\n        <p>Counselor Support Assistant • AI-powered guidance for mental health professionals</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}